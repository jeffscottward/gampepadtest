{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport useGamepads from \"../hooks/useGamepads\";\nimport N64Controller from \"../utils/N64Controller\";\n\nvar Box = () => {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  var box = useRef(); // Render Loop Hook\n\n  useGamepads(gamepads => {\n    setGamepads(gamepads);\n\n    if (gamepads[0]) {\n      if (N64Controller(gamepads[0]).dpad === 'UP') {\n        box.current.rotation.x -= 0.02;\n      }\n\n      if (N64Controller(gamepads[0]).dpad === 'UPRIGHT') {}\n\n      if (N64Controller(gamepads[0]).dpad === 'RIGHT') {\n        box.current.rotation.y += 0.02;\n      }\n\n      if (N64Controller(gamepads[0]).dpad === 'DOWNRIGHT') {}\n\n      if (N64Controller(gamepads[0]).dpad === 'DOWN') {\n        box.current.rotation.z += 0.02;\n      }\n\n      if (N64Controller(gamepads[0]).dpad === 'DOWNLEFT') {}\n\n      if (N64Controller(gamepads[0]).dpad === 'LEFT') {\n        box.current.rotation.y -= 0.02;\n      }\n\n      if (N64Controller(gamepads[0]).dpad === 'UPLEFT') {}\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"mesh\", {\n    ref: box,\n    scale: [10, 10, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n    args: [1, 1, 1],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n    color: 0xffff00,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default function GamepadController() {\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      gamepads = _useState4[0],\n      setGamepads = _useState4[1];\n\n  useGamepads(gamepads => {\n    setGamepads(gamepads);\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: '200px',\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, gamepads[0] && gamepads[0].id, gamepads[0] && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100px',\n      height: '100px',\n      background: N64Controller(gamepads[0]).dpad === 'UP' ? 'red' : N64Controller(gamepads[0]).dpad === 'UPRIGHT' ? 'orange' : N64Controller(gamepads[0]).dpad === 'RIGHT' ? 'yellow' : N64Controller(gamepads[0]).dpad === 'DOWNRIGHT' ? 'green' : N64Controller(gamepads[0]).dpad === 'DOWN' ? 'blue' : N64Controller(gamepads[0]).dpad === 'DOWNLEFT' ? 'purple' : N64Controller(gamepads[0]).dpad === 'LEFT' ? 'brown' : N64Controller(gamepads[0]).dpad === 'UPLEFT' ? 'black' : 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Canvas, {\n    concurrent: true,\n    shadowMap: true,\n    gl: {\n      antialias: false,\n      alpha: true\n    },\n    camera: {\n      position: [0, 0, 20],\n      near: 0.01,\n      far: 100\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"ambientLight\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"pointLight\", {\n    position: [10, 10, 10],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useEffect","useState","useRef","THREE","Canvas","useFrame","useGamepads","N64Controller","Box","gamepads","setGamepads","box","dpad","current","rotation","x","y","z","GamepadController","position","top","left","width","textAlign","id","height","background","antialias","alpha","near","far"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\nimport N64Controller from \"../utils/N64Controller\";\r\n\r\n\r\nconst Box = () => {\r\n  const [gamepads, setGamepads] = useState({});\r\n  const box = useRef();\r\n\r\n  // Render Loop Hook\r\n  useGamepads((gamepads) => {\r\n    setGamepads(gamepads)\r\n    if(gamepads[0]){\r\n      if(N64Controller(gamepads[0]).dpad === 'UP'){\r\n        box.current.rotation.x -= 0.02;\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'UPRIGHT'){\r\n\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'RIGHT'){\r\n        \r\n        box.current.rotation.y += 0.02;\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'DOWNRIGHT'){\r\n\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'DOWN'){\r\n        box.current.rotation.z += 0.02;\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'DOWNLEFT'){\r\n\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'LEFT'){\r\n        box.current.rotation.y -= 0.02;\r\n      }\r\n      if(N64Controller(gamepads[0]).dpad === 'UPLEFT'){\r\n\r\n      }\r\n    }\r\n  });  \r\n  \r\n  return (\r\n    <mesh ref={ box } scale={ [10, 10, 10] }>\r\n      <boxGeometry args={ [1, 1, 1] } />\r\n      <meshStandardMaterial color={ 0xffff00 } />\r\n    </mesh>\r\n  );\r\n}\r\n\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => {\r\n    setGamepads(gamepads)\r\n  });  \r\n\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Gamepads\"\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: '200px',\r\n          textAlign: 'left'\r\n        }}\r\n      >\r\n        {gamepads[0] && gamepads[0].id}\r\n        {gamepads[0] && (\r\n          <div style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            background: \r\n              N64Controller(gamepads[0]).dpad === 'UP'\r\n              ? 'red'\r\n              : N64Controller(gamepads[0]).dpad === 'UPRIGHT'\r\n                ? 'orange'\r\n                : N64Controller(gamepads[0]).dpad === 'RIGHT'\r\n                  ? 'yellow'\r\n                  : N64Controller(gamepads[0]).dpad === 'DOWNRIGHT'\r\n                    ? 'green'\r\n                    : N64Controller(gamepads[0]).dpad === 'DOWN'\r\n                      ? 'blue'\r\n                      : N64Controller(gamepads[0]).dpad === 'DOWNLEFT'\r\n                        ? 'purple'\r\n                        : N64Controller(gamepads[0]).dpad === 'LEFT'\r\n                          ? 'brown'\r\n                          : N64Controller(gamepads[0]).dpad === 'UPLEFT'\r\n                            ? 'black'\r\n                            : 'gray'\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      <Canvas\r\n        concurrent\r\n        shadowMap\r\n        gl={{ antialias: false, alpha: true }}\r\n        camera={{\r\n          position: [0, 0, 20],\r\n          near: 0.01,\r\n          far: 100\r\n        }}\r\n      >\r\n        <ambientLight />\r\n        <pointLight position={ [10, 10, 10] } />\r\n        <Box />\r\n      </Canvas>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport * as THREE from \"three\";\nimport { Canvas, useFrame } from \"react-three-fiber\";\nimport useGamepads from \"../hooks/useGamepads\";\nimport N64Controller from \"../utils/N64Controller\";\nexport default function GamepadController() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  useGamepads(gamepads => {\n    setGamepads(gamepads);\n  });\n\n  function Box() {\n    // Reference to the mesh\n    var box = useRef(); // Render Loop Hook\n\n    useFrame(() => {\n      if (gamepads[0]) {\n        if (N64Controller(gamepads[0]).dpad === 'UP') {\n          box.current.rotation.y += 0.02;\n        }\n\n        if (N64Controller(gamepads[0]).dpad === 'UPRIGHT') {}\n\n        if (N64Controller(gamepads[0]).dpad === 'RIGHT') {\n          box.current.rotation.z += 0.02;\n        }\n\n        if (N64Controller(gamepads[0]).dpad === 'DOWNRIGHT') {}\n\n        if (N64Controller(gamepads[0]).dpad === 'DOWN') {\n          box.current.rotation.y -= 0.02;\n        }\n\n        if (N64Controller(gamepads[0]).dpad === 'DOWNLEFT') {}\n\n        if (N64Controller(gamepads[0]).dpad === 'LEFT') {\n          box.current.rotation.z -= 0.001;\n        }\n\n        if (N64Controller(gamepads[0]).dpad === 'UPLEFT') {}\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"mesh\", {\n      ref: box,\n      scale: [10, 10, 10],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"boxGeometry\", {\n      args: [1, 1, 1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"meshStandardMaterial\", {\n      color: 0xffff00,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: '200px',\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, gamepads[0] && gamepads[0].id, gamepads[0] && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      width: '100px',\n      height: '100px',\n      background: N64Controller(gamepads[0]).dpad === 'UP' ? 'red' : N64Controller(gamepads[0]).dpad === 'UPRIGHT' ? 'orange' : N64Controller(gamepads[0]).dpad === 'RIGHT' ? 'yellow' : N64Controller(gamepads[0]).dpad === 'DOWNRIGHT' ? 'green' : N64Controller(gamepads[0]).dpad === 'DOWN' ? 'blue' : N64Controller(gamepads[0]).dpad === 'DOWNLEFT' ? 'purple' : N64Controller(gamepads[0]).dpad === 'LEFT' ? 'brown' : N64Controller(gamepads[0]).dpad === 'UPLEFT' ? 'black' : 'gray'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useEffect","useState","useRef","THREE","Canvas","useFrame","useGamepads","N64Controller","GamepadController","gamepads","setGamepads","Box","box","dpad","current","rotation","y","z","position","top","left","width","textAlign","id","height","background"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef} from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useFrame } from \"react-three-fiber\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\nimport N64Controller from \"../utils/N64Controller\";\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => {setGamepads(gamepads)});  \r\n\r\n  function Box() {\r\n    // Reference to the mesh\r\n    const box = useRef();\r\n  \r\n    // Render Loop Hook\r\n    useFrame(() => {\r\n      if(gamepads[0]){\r\n        if(N64Controller(gamepads[0]).dpad === 'UP'){\r\n          box.current.rotation.y += 0.02;\r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'UPRIGHT'){\r\n  \r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'RIGHT'){\r\n          box.current.rotation.z += 0.02;\r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'DOWNRIGHT'){\r\n  \r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'DOWN'){\r\n          box.current.rotation.y -= 0.02;\r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'DOWNLEFT'){\r\n  \r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'LEFT'){\r\n          box.current.rotation.z -= 0.001;\r\n        }\r\n        if(N64Controller(gamepads[0]).dpad === 'UPLEFT'){\r\n  \r\n        }\r\n      }\r\n      \r\n\r\n    });\r\n  \r\n    return (\r\n      <mesh ref={ box } scale={ [10, 10, 10] }>\r\n        <boxGeometry args={ [1, 1, 1] } />\r\n        <meshStandardMaterial color={ 0xffff00 } />\r\n      </mesh>\r\n    );\r\n  }\r\n\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className=\"Gamepads\"\r\n        style={{\r\n          position: \"fixed\",\r\n          top: 0,\r\n          left: 0,\r\n          width: '200px',\r\n          textAlign: 'left'\r\n        }}\r\n      >\r\n        {gamepads[0] && gamepads[0].id}\r\n        {gamepads[0] && (\r\n          <div style={{\r\n            width: '100px',\r\n            height: '100px',\r\n            background: \r\n              N64Controller(gamepads[0]).dpad === 'UP'\r\n              ? 'red'\r\n              : N64Controller(gamepads[0]).dpad === 'UPRIGHT'\r\n                ? 'orange'\r\n                : N64Controller(gamepads[0]).dpad === 'RIGHT'\r\n                  ? 'yellow'\r\n                  : N64Controller(gamepads[0]).dpad === 'DOWNRIGHT'\r\n                    ? 'green'\r\n                    : N64Controller(gamepads[0]).dpad === 'DOWN'\r\n                      ? 'blue'\r\n                      : N64Controller(gamepads[0]).dpad === 'DOWNLEFT'\r\n                        ? 'purple'\r\n                        : N64Controller(gamepads[0]).dpad === 'LEFT'\r\n                          ? 'brown'\r\n                          : N64Controller(gamepads[0]).dpad === 'UPLEFT'\r\n                            ? 'black'\r\n                            : 'gray'\r\n            }}\r\n          />\r\n        )}\r\n      </div>\r\n      {/* <Canvas\r\n          concurrent\r\n          shadowMap\r\n          gl={{ antialias: false, alpha: true }}\r\n          camera={{\r\n            position: [0, 0, 20],\r\n            near: 0.01,\r\n            far: 100\r\n          }}\r\n        >\r\n          <ambientLight />\r\n          <pointLight position={ [10, 10, 10] } />\r\n          <Box />\r\n        </Canvas> */}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
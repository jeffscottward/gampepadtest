{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport useGamepads from \"../hooks/useGamepads\";\nvar buttonOrder = ['CUP', 'CRIGHT', 'CDOWN', 'CLEFT', 'L', 'R', 'A', 'Z', 'B', 'Start'];\n\nvar calcDirectionDPAD = axe => {\n  switch (axe) {\n    case -1:\n      return 'UP';\n\n    case -0.7142857142857143:\n      return 'UPRIGHT';\n\n    case -0.4285714285714286:\n      return 'RIGHT';\n\n    case -0.1428571428571429:\n      return 'DOWNRIGHT';\n\n    case 0.1428571428571428:\n      return 'DOWN';\n\n    case 0.4285714285714286:\n      return 'DOWNLEFT';\n\n    case 0.7142857142857142:\n      return 'LEFT';\n\n    case 1:\n      return 'UPLEFT';\n\n    case 3.2857142857142856:\n      return 'NONE';\n\n    default:\n      return 'NONE';\n  }\n};\n\nvar calcButtons = buttons => {\n  buttons.map((button, idx) => {\n    // console.log(button)\n    if (button.touched) {\n      console.log(buttonOrder[idx]);\n    }\n  }); // return buttons.filter((button, indx) => button.touched)\n};\n\nexport default function GamepadController() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      players = _useState4[0],\n      setPlayers = _useState4[1];\n\n  useGamepads(gamepads => {\n    setGamepads(gamepads);\n  });\n  useEffect(() => {\n    console.log('hi');\n\n    if (gamepads.length > 0) {\n      var player1DPAD = gamepads[0].axes[6];\n      var player1buttons = gamepads[0].buttons;\n      console.log(calcDirectionDPAD(player1DPAD), calcButtons(player1buttons));\n    }\n  }, [gamepads.length > 0 && gamepads[0].buttons[0].touched]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: '200px',\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, gamepads[0] && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, gamepads[0].id), \" \", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 53\n    }\n  })), gamepads[0] && /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[0].touched ? 'Pressed CUP' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[1].touched ? 'Pressed CRIGHT' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[2].touched ? 'Pressed CDOWN' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[3].touched ? 'Pressed CLEFT' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[4].touched ? 'Pressed L' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[5].touched ? 'Pressed R' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[6].touched ? 'Pressed A' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[7].touched ? 'Pressed Z' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[8].touched ? 'Pressed B' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[9].touched ? 'Pressed Start' : 'Press ____')));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useEffect","useState","useGamepads","buttonOrder","calcDirectionDPAD","axe","calcButtons","buttons","map","button","idx","touched","console","log","GamepadController","gamepads","setGamepads","players","setPlayers","length","player1DPAD","axes","player1buttons","position","top","left","width","textAlign","id","listStyle","margin","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\n\r\nconst buttonOrder = [ 'CUP', 'CRIGHT', 'CDOWN', 'CLEFT', 'L', 'R', 'A', 'Z', 'B', 'Start' ]\r\n\r\nconst calcDirectionDPAD = (axe) => {\r\n  switch (axe) {\r\n    case -1:\r\n      return 'UP'\r\n    case -0.7142857142857143:\r\n      return 'UPRIGHT'\r\n    case -0.4285714285714286:\r\n      return 'RIGHT'\r\n    case -0.1428571428571429:\r\n      return 'DOWNRIGHT'\r\n    case 0.1428571428571428:\r\n      return 'DOWN'\r\n    case 0.4285714285714286:\r\n      return 'DOWNLEFT'\r\n    case 0.7142857142857142:\r\n      return 'LEFT'\r\n    case 1:\r\n      return 'UPLEFT'\r\n    case 3.2857142857142856:\r\n      return 'NONE'\r\n    default:\r\n      return 'NONE'\r\n  }\r\n};\r\n\r\nconst calcButtons = (buttons) => {\r\n  buttons.map((button, idx) => {\r\n    // console.log(button)\r\n    if(button.touched){ \r\n      console.log(buttonOrder[idx])\r\n    }\r\n  })\r\n  // return buttons.filter((button, indx) => button.touched)\r\n}\r\n\r\n\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  const [players, setPlayers] = useState(null);\r\n  useGamepads((gamepads) => {\r\n    setGamepads(gamepads)\r\n  });\r\n  \r\n  useEffect(() => {\r\n    console.log('hi')\r\n    if(gamepads.length > 0) {\r\n      \r\n      let player1DPAD = gamepads[0].axes[6]\r\n      let player1buttons = gamepads[0].buttons\r\n      console.log(\r\n        calcDirectionDPAD(player1DPAD),\r\n        calcButtons(player1buttons)\r\n      );\r\n    }  \r\n  }, [gamepads.length > 0 && gamepads[0].buttons[0].touched ])\r\n\r\n  return (\r\n    <div\r\n      className=\"Gamepads\"\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: '200px',\r\n        textAlign: 'left'\r\n      }}\r\n    >\r\n      {gamepads[0] && (<div><b>{gamepads[0].id}</b> <hr/></div>)}\r\n      {gamepads[0] && (\r\n        <ul style={{ listStyle: 'none', margin: 0, padding: 0}}>\r\n          <li>{gamepads[0].buttons[0].touched ? 'Pressed CUP' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[1].touched ? 'Pressed CRIGHT' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[2].touched ? 'Pressed CDOWN' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[3].touched ? 'Pressed CLEFT' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[4].touched ? 'Pressed L' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[5].touched ? 'Pressed R' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[6].touched ? 'Pressed A' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[7].touched ? 'Pressed Z' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[8].touched ? 'Pressed B' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[9].touched ? 'Pressed Start' : 'Press ____'}</li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/StartScreen.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport useGamepads from \"../hooks/useGamepads\";\nexport default function StartScreen({\n  setGameStarted\n}) {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  useGamepads(gamepads => setGamepads(gamepads));\n  useEffect(() => {\n    // If controller connected with buttons\n    if (gamepads && gamepads[0] && gamepads[0].buttons.length > 0) {\n      // Go through each button and check for pressed\n      gamepads[0].buttons.forEach(button => {\n        if (button.pressed) {\n          setGameStarted(true);\n        }\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, \"Press any button to start\");\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/StartScreen.jsx"],"names":["React","useState","useEffect","useGamepads","StartScreen","setGameStarted","gamepads","setGamepads","buttons","length","forEach","button","pressed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AAEA,eAAe,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAyC;AAAA,kBACtBJ,QAAQ,CAAC,EAAD,CADc;AAAA;AAAA,MAC/CK,QAD+C;AAAA,MACrCC,WADqC;;AAEtDJ,EAAAA,WAAW,CAAEG,QAAD,IAAcC,WAAW,CAACD,QAAD,CAA1B,CAAX;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAII,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,IAA2BA,QAAQ,CAAC,CAAD,CAAR,CAAYE,OAAZ,CAAoBC,MAApB,GAA6B,CAA5D,EAA+D;AAC7D;AACAH,MAAAA,QAAQ,CAAC,CAAD,CAAR,CAAYE,OAAZ,CAAoBE,OAApB,CAA6BC,MAAD,IAAY;AACtC,YAAIA,MAAM,CAACC,OAAX,EAAoB;AAClBP,UAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,OAJD;AAKD;AACF,GAVQ,CAAT;AAYA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAP;AACD","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\n\r\nexport default function StartScreen({ setGameStarted }) {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => setGamepads(gamepads));\r\n\r\n  useEffect(() => {\r\n    // If controller connected with buttons\r\n    if (gamepads && gamepads[0] && gamepads[0].buttons.length > 0) {\r\n      // Go through each button and check for pressed\r\n      gamepads[0].buttons.forEach((button) => {\r\n        if (button.pressed) {\r\n          setGameStarted(true);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  return <div>Press any button to start</div>;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
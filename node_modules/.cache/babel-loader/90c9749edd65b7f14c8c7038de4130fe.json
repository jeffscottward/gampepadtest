{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useState } from \"react\";\nimport useGamepads from \"../hooks/useGamepads\";\nimport GamepadSvg from \"./GamepadSvg\";\nexport default function GamepadController() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  useGamepads(gamepads => setGamepads(gamepads));\n  console.log(gamepads);\n\n  var calcDirectionVertical = axe => {\n    // Up\n    if (axe < -0.2) {\n      return \"up\";\n    } // Down\n\n\n    if (axe > 0.2) {\n      return \"down\";\n    }\n  };\n\n  var calcDirectionHorizontal = axe => {\n    // Left\n    if (axe < -0.2) {\n      return \"left\";\n    } // Right\n\n\n    if (axe > 0.2) {\n      return \"right\";\n    }\n  }; // console.log([\n  //   calcDirectionHorizontal(gamepads[0].axes[0]),\n  //   calcDirectionVertical(gamepads[0].axes[1])\n  // ]);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      bottom: 0,\n      right: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, \"Gamepads\"), gamepads && gamepads[0] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(GamepadSvg, {\n    directionUp: gamepads[0].buttons[12].pressed,\n    directionDown: gamepads[0].buttons[13].pressed,\n    directionLeft: gamepads[0].buttons[14].pressed,\n    directionRight: gamepads[0].buttons[15].pressed,\n    buttonDown: gamepads[0].buttons[0].pressed,\n    buttonRight: gamepads[0].buttons[1].pressed,\n    buttonLeft: gamepads[0].buttons[2].pressed,\n    buttonUp: gamepads[0].buttons[3].pressed,\n    select: gamepads[0].buttons[8].pressed,\n    start: gamepads[0].buttons[9].pressed,\n    analogLeft: gamepads[0].axes[0] > 0.3 || gamepads[0].axes[0] < -0.3 || gamepads[0].axes[1] > 0.3 || gamepads[0].axes[1] < -0.3,\n    analogRight: gamepads[0].axes[2] > 0.3 || gamepads[0].axes[2] < -0.3 || gamepads[0].axes[3] > 0.3 || gamepads[0].axes[3] < -0.3,\n    analogLeftDirection: [calcDirectionHorizontal(gamepads[0].axes[0]), calcDirectionVertical(gamepads[0].axes[1])],\n    analogRightDirection: [calcDirectionHorizontal(gamepads[0].axes[2]), calcDirectionVertical(gamepads[0].axes[3])],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, \"Player 1\")));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useState","useGamepads","GamepadSvg","GamepadController","gamepads","setGamepads","console","log","calcDirectionVertical","axe","calcDirectionHorizontal","position","bottom","right","buttons","pressed","axes"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\nimport GamepadSvg from \"./GamepadSvg\";\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => setGamepads(gamepads));\r\n  console.log(gamepads);\r\n  const calcDirectionVertical = (axe) => {\r\n    // Up\r\n    if (axe < -0.2) {\r\n      return \"up\";\r\n    }\r\n    // Down\r\n    if (axe > 0.2) {\r\n      return \"down\";\r\n    }\r\n  };\r\n\r\n  const calcDirectionHorizontal = (axe) => {\r\n    // Left\r\n    if (axe < -0.2) {\r\n      return \"left\";\r\n    }\r\n    // Right\r\n    if (axe > 0.2) {\r\n      return \"right\";\r\n    }\r\n  };\r\n  // console.log([\r\n  //   calcDirectionHorizontal(gamepads[0].axes[0]),\r\n  //   calcDirectionVertical(gamepads[0].axes[1])\r\n  // ]);\r\n  return (\r\n    <div\r\n      className=\"Gamepads\"\r\n      style={{ position: \"fixed\", bottom: 0, right: 0 }}\r\n    >\r\n      <small>Gamepads</small>\r\n      {/* {gamepadDisplay} */}\r\n      {gamepads && gamepads[0] && (\r\n        <>\r\n          <GamepadSvg\r\n            directionUp={gamepads[0].buttons[12].pressed}\r\n            directionDown={gamepads[0].buttons[13].pressed}\r\n            directionLeft={gamepads[0].buttons[14].pressed}\r\n            directionRight={gamepads[0].buttons[15].pressed}\r\n            buttonDown={gamepads[0].buttons[0].pressed}\r\n            buttonRight={gamepads[0].buttons[1].pressed}\r\n            buttonLeft={gamepads[0].buttons[2].pressed}\r\n            buttonUp={gamepads[0].buttons[3].pressed}\r\n            select={gamepads[0].buttons[8].pressed}\r\n            start={gamepads[0].buttons[9].pressed}\r\n            analogLeft={\r\n              gamepads[0].axes[0] > 0.3 ||\r\n              gamepads[0].axes[0] < -0.3 ||\r\n              gamepads[0].axes[1] > 0.3 ||\r\n              gamepads[0].axes[1] < -0.3\r\n            }\r\n            analogRight={\r\n              gamepads[0].axes[2] > 0.3 ||\r\n              gamepads[0].axes[2] < -0.3 ||\r\n              gamepads[0].axes[3] > 0.3 ||\r\n              gamepads[0].axes[3] < -0.3\r\n            }\r\n            analogLeftDirection={[\r\n              calcDirectionHorizontal(gamepads[0].axes[0]),\r\n              calcDirectionVertical(gamepads[0].axes[1])\r\n            ]}\r\n            analogRightDirection={[\r\n              calcDirectionHorizontal(gamepads[0].axes[2]),\r\n              calcDirectionVertical(gamepads[0].axes[3])\r\n            ]}\r\n          />\r\n          <h3>Player 1</h3>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
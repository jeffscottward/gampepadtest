{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport useGamepads from \"../hooks/useGamepads\";\nimport GamepadSvg from \"./GamepadSvg\";\nexport default function GamepadController() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  useGamepads(gamepads => setGamepads(gamepads));\n\n  var calcDirectionVertical = axe => {\n    // Up\n    if (axe < -0.2) {\n      return \"up\";\n    } // Down\n\n\n    if (axe > 0.2) {\n      return \"down\";\n    }\n  };\n\n  var calcDirectionHorizontal = axe => {\n    // Left\n    if (axe < -0.2) {\n      return \"left\";\n    } // Right\n\n\n    if (axe > 0.2) {\n      return \"right\";\n    }\n  }; // console.log([\n  //   calcDirectionHorizontal(gamepads[0].axes[0]),\n  //   calcDirectionVertical(gamepads[0].axes[1])\n  // ]);\n\n\n  if (gamepads[0]) {// console.log(gamepads[0])\n    // gamepads[0].axes.map((axe) => {\n    //   // console.log(axe)\n    // });\n  }\n\n  useEffect(() => {\n    console.log({\n      axes: gamepads[0].axes\n    });\n  }, [gamepads && gamepads[0] && gamepads[0].axes]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      bottom: 0,\n      right: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"Gamepads\"), gamepads[0] && \"id: \".concat(gamepads[0].id, \" \"), \"buttons: \", gamepads[0] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[0].pressed ? 'Pressed 0' : 'CUP'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[1].pressed ? 'Pressed 1' : 'CRIGHT'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[2].pressed ? 'Pressed 2' : 'CDOWN'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[3].pressed ? 'Pressed 3' : 'CLEFT'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[4].pressed ? 'Pressed 4' : 'L'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[5].pressed ? 'Pressed 5' : 'R'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[6].pressed ? 'Pressed 6' : 'A'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[7].pressed ? 'Pressed 7' : 'Z'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[8].pressed ? 'Pressed 8' : 'B'), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[9].pressed ? 'Pressed 9' : 'Start')));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useEffect","useState","useGamepads","GamepadSvg","GamepadController","gamepads","setGamepads","calcDirectionVertical","axe","calcDirectionHorizontal","console","log","axes","position","bottom","right","id","buttons","pressed"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA,kBACVH,QAAQ,CAAC,EAAD,CADE;AAAA;AAAA,MACnCI,QADmC;AAAA,MACzBC,WADyB;;AAE1CJ,EAAAA,WAAW,CAAEG,QAAD,IAAcC,WAAW,CAACD,QAAD,CAA1B,CAAX;;AAEA,MAAME,qBAAqB,GAAIC,GAAD,IAAS;AACrC;AACA,QAAIA,GAAG,GAAG,CAAC,GAAX,EAAgB;AACd,aAAO,IAAP;AACD,KAJoC,CAKrC;;;AACA,QAAIA,GAAG,GAAG,GAAV,EAAe;AACb,aAAO,MAAP;AACD;AACF,GATD;;AAWA,MAAMC,uBAAuB,GAAID,GAAD,IAAS;AACvC;AACA,QAAIA,GAAG,GAAG,CAAC,GAAX,EAAgB;AACd,aAAO,MAAP;AACD,KAJsC,CAKvC;;;AACA,QAAIA,GAAG,GAAG,GAAV,EAAe;AACb,aAAO,OAAP;AACD;AACF,GATD,CAf0C,CAyB1C;AACA;AACA;AACA;;;AAEA,MAAGH,QAAQ,CAAC,CAAD,CAAX,EAAgB,CACd;AACA;AACA;AACA;AACD;;AAEDL,EAAAA,SAAS,CAAC,MAAM;AACbU,IAAAA,OAAO,CAACC,GAAR,CAAY;AAACC,MAAAA,IAAI,EAAEP,QAAQ,CAAC,CAAD,CAAR,CAAYO;AAAnB,KAAZ;AACF,GAFQ,EAEN,CAACP,QAAQ,IAAIA,QAAQ,CAAC,CAAD,CAApB,IAA2BA,QAAQ,CAAC,CAAD,CAAR,CAAYO,IAAxC,CAFM,CAAT;AAIA,sBACE;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE,OAAZ;AAAqBC,MAAAA,MAAM,EAAE,CAA7B;AAAgCC,MAAAA,KAAK,EAAE;AAAvC,KAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,EAKGV,QAAQ,CAAC,CAAD,CAAR,kBAAuBA,QAAQ,CAAC,CAAD,CAAR,CAAYW,EAAnC,MALH,eAMYX,QAAQ,CAAC,CAAD,CAAR,iBACR,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMA,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,KAArD,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,QAArD,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,OAArD,CAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,OAArD,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,GAArD,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,GAArD,CANF,eAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,GAArD,CAPF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,GAArD,CARF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,GAArD,CATF,eAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMb,QAAQ,CAAC,CAAD,CAAR,CAAYY,OAAZ,CAAoB,CAApB,EAAuBC,OAAvB,GAAiC,WAAjC,GAA+C,OAArD,CAVF,CAPJ,CADF;AAyED","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\nimport GamepadSvg from \"./GamepadSvg\";\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => setGamepads(gamepads));\r\n\r\n  const calcDirectionVertical = (axe) => {\r\n    // Up\r\n    if (axe < -0.2) {\r\n      return \"up\";\r\n    }\r\n    // Down\r\n    if (axe > 0.2) {\r\n      return \"down\";\r\n    }\r\n  };\r\n\r\n  const calcDirectionHorizontal = (axe) => {\r\n    // Left\r\n    if (axe < -0.2) {\r\n      return \"left\";\r\n    }\r\n    // Right\r\n    if (axe > 0.2) {\r\n      return \"right\";\r\n    }\r\n  };\r\n  // console.log([\r\n  //   calcDirectionHorizontal(gamepads[0].axes[0]),\r\n  //   calcDirectionVertical(gamepads[0].axes[1])\r\n  // ]);\r\n\r\n  if(gamepads[0]) {\r\n    // console.log(gamepads[0])\r\n    // gamepads[0].axes.map((axe) => {\r\n    //   // console.log(axe)\r\n    // });\r\n  }\r\n\r\n  useEffect(() => {\r\n     console.log({axes: gamepads[0].axes})\r\n  }, [gamepads && gamepads[0] && gamepads[0].axes])\r\n\r\n  return (\r\n    <div\r\n      className=\"Gamepads\"\r\n      style={{ position: \"fixed\", bottom: 0, right: 0 }}\r\n    >\r\n      <small>Gamepads</small>\r\n      {gamepads[0] && (`id: ${gamepads[0].id} `)}\r\n      buttons: {gamepads[0] && (\r\n        <>\r\n          <div>{gamepads[0].buttons[0].pressed ? 'Pressed 0' : 'CUP'}</div>\r\n          <div>{gamepads[0].buttons[1].pressed ? 'Pressed 1' : 'CRIGHT'}</div>\r\n          <div>{gamepads[0].buttons[2].pressed ? 'Pressed 2' : 'CDOWN'}</div>\r\n          <div>{gamepads[0].buttons[3].pressed ? 'Pressed 3' : 'CLEFT'}</div>\r\n          <div>{gamepads[0].buttons[4].pressed ? 'Pressed 4' : 'L'}</div>\r\n          <div>{gamepads[0].buttons[5].pressed ? 'Pressed 5' : 'R'}</div>\r\n          <div>{gamepads[0].buttons[6].pressed ? 'Pressed 6' : 'A'}</div>\r\n          <div>{gamepads[0].buttons[7].pressed ? 'Pressed 7' : 'Z'}</div>\r\n          <div>{gamepads[0].buttons[8].pressed ? 'Pressed 8' : 'B'}</div>\r\n          <div>{gamepads[0].buttons[9].pressed ? 'Pressed 9' : 'Start'}</div>\r\n        \r\n          {/* <div>{gamepads[0].buttons[0].pressed ? 'Pressed 0' : 'CUP'}</div>\r\n          <div>{gamepads[0].buttons[1].pressed ? 'Pressed 1' : 'CRIGHT'}</div>\r\n          <div>{gamepads[0].buttons[2].pressed ? 'Pressed 2' : 'CDOWN'}</div>\r\n          <div>{gamepads[0].buttons[3].pressed ? 'Pressed 3' : 'CLEFT'}</div>\r\n          <div>{gamepads[0].buttons[4].pressed ? 'Pressed 4' : 'L'}</div>\r\n          <div>{gamepads[0].buttons[5].pressed ? 'Pressed 5' : 'R'}</div>\r\n          <div>{gamepads[0].buttons[6].pressed ? 'Pressed 6' : 'A'}</div>\r\n          <div>{gamepads[0].buttons[7].pressed ? 'Pressed 7' : 'Z'}</div>\r\n          <div>{gamepads[0].buttons[8].pressed ? 'Pressed 8' : 'B'}</div>\r\n          <div>{gamepads[0].buttons[9].pressed ? 'Pressed 9' : 'Start'}</div> */}\r\n        </>\r\n      )}\r\n      \r\n      {/* {gamepadDisplay} */}\r\n      {/* {gamepads && gamepads[0] && (\r\n        <>\r\n          <GamepadSvg\r\n            directionUp={gamepads[0].buttons[12].pressed}\r\n            directionDown={gamepads[0].buttons[13].pressed}\r\n            directionLeft={gamepads[0].buttons[14].pressed}\r\n            directionRight={gamepads[0].buttons[15].pressed}\r\n            buttonDown={gamepads[0].buttons[0].pressed}\r\n            buttonRight={gamepads[0].buttons[1].pressed}\r\n            buttonLeft={gamepads[0].buttons[2].pressed}\r\n            buttonUp={gamepads[0].buttons[3].pressed}\r\n            select={gamepads[0].buttons[8].pressed}\r\n            start={gamepads[0].buttons[9].pressed}\r\n            analogLeft={\r\n              gamepads[0].axes[0] > 0.3 ||\r\n              gamepads[0].axes[0] < -0.3 ||\r\n              gamepads[0].axes[1] > 0.3 ||\r\n              gamepads[0].axes[1] < -0.3\r\n            }\r\n            analogRight={\r\n              gamepads[0].axes[2] > 0.3 ||\r\n              gamepads[0].axes[2] < -0.3 ||\r\n              gamepads[0].axes[3] > 0.3 ||\r\n              gamepads[0].axes[3] < -0.3\r\n            }\r\n            analogLeftDirection={[\r\n              calcDirectionHorizontal(gamepads[0].axes[0]),\r\n              calcDirectionVertical(gamepads[0].axes[1])\r\n            ]}\r\n            analogRightDirection={[\r\n              calcDirectionHorizontal(gamepads[0].axes[2]),\r\n              calcDirectionVertical(gamepads[0].axes[3])\r\n            ]}\r\n          />\r\n          <h3>Player 1</h3>\r\n        </>\r\n      )} */}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
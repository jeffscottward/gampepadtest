{"ast":null,"code":"import _slicedToArray from \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx\";\nimport React, { useEffect, useState } from \"react\";\nimport useGamepads from \"../hooks/useGamepads\";\nvar buttonOrder = ['CUP', 'CRIGHT', 'CDOWN', 'CLEFT', 'L', 'R', 'A', 'Z', 'B', 'START'];\nvar dpadMap = {\n  '-1': 'UP',\n  '-0.7142857142857143': 'UPRIGHT',\n  '-0.4285714285714286': 'RIGHT',\n  '-0.1428571428571429': 'DOWNRIGHT',\n  '0.1428571428571428': 'DOWN',\n  '0.4285714285714286': 'DOWNLEFT',\n  '0.7142857142857142': 'LEFT',\n  '1': 'UPLEFT',\n  '3.2857142857142856': 'NONE',\n  undefined: 'NONE'\n};\n\nvar buttonMap = buttons => {\n  return buttons.map((button, idx) => {\n    if (button.pressed) {\n      return buttonOrder[idx];\n    }\n  }).filter(slot => slot !== undefined);\n};\n\nexport default function GamepadController() {\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      gamepads = _useState2[0],\n      setGamepads = _useState2[1];\n\n  useGamepads(gamepads => {\n    setGamepads(gamepads);\n  }); // useEffect(() => {\n  //   if(Object.keys(gamepads).length > 0){\n  //     console.log('X-AXIS: ', gamepads[0].axes[1])\n  //     console.log('Y-AXIS: ', gamepads[0].axes[2])\n  //     console.log(\n  //       dpadMap[gamepads[0].axes[6]],\n  //       buttonMap(gamepads[0].buttons)\n  //     );\n  //   }\n  // }, [gamepads[0] && gamepads[0].buttons])\n\n  if (gamepads[0]) {\n    console.log({\n      analog: {\n        x: gamepads[0].axes[1],\n        y: gamepads[0].axes[2]\n      }\n    }, dpadMap[gamepads[0].axes[6]], buttonMap(gamepads[0].buttons));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Gamepads\",\n    style: {\n      position: \"fixed\",\n      top: 0,\n      left: 0,\n      width: '200px',\n      textAlign: 'left'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, gamepads[0] && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 29\n    }\n  }, gamepads[0].id), \" \", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 53\n    }\n  })), gamepads[0] && /*#__PURE__*/React.createElement(\"ul\", {\n    style: {\n      listStyle: 'none',\n      margin: 0,\n      padding: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[0].pressed ? 'Pressed CUP' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[1].pressed ? 'Pressed CRIGHT' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[2].pressed ? 'Pressed CDOWN' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[3].pressed ? 'Pressed CLEFT' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[4].pressed ? 'Pressed L' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[5].pressed ? 'Pressed R' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[6].pressed ? 'Pressed A' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[7].pressed ? 'Pressed Z' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[8].pressed ? 'Pressed B' : 'Press ____'), /*#__PURE__*/React.createElement(\"li\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, gamepads[0].buttons[9].pressed ? 'Pressed Start' : 'Press ____')));\n}","map":{"version":3,"sources":["/Users/jeffscottward/Documents/Development/jeffscottward/gampepadtest/src/components/GamepadController.jsx"],"names":["React","useEffect","useState","useGamepads","buttonOrder","dpadMap","undefined","buttonMap","buttons","map","button","idx","pressed","filter","slot","GamepadController","gamepads","setGamepads","console","log","analog","x","axes","y","position","top","left","width","textAlign","id","listStyle","margin","padding"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport useGamepads from \"../hooks/useGamepads\";\r\n\r\nconst buttonOrder = [ 'CUP', 'CRIGHT', 'CDOWN', 'CLEFT', 'L', 'R', 'A', 'Z', 'B', 'START' ]\r\nconst dpadMap = {\r\n  '-1': 'UP',\r\n  '-0.7142857142857143': 'UPRIGHT',\r\n  '-0.4285714285714286': 'RIGHT',\r\n  '-0.1428571428571429': 'DOWNRIGHT',\r\n  '0.1428571428571428': 'DOWN',\r\n  '0.4285714285714286': 'DOWNLEFT',\r\n  '0.7142857142857142': 'LEFT',\r\n  '1': 'UPLEFT',\r\n  '3.2857142857142856': 'NONE',\r\n  undefined: 'NONE',\r\n}\r\n\r\nconst buttonMap = (buttons) => {\r\n  return buttons.map((button, idx) => {\r\n    if(button.pressed){ \r\n      return buttonOrder[idx]\r\n    }\r\n  }).filter((slot)=> slot !== undefined)\r\n}\r\n\r\nexport default function GamepadController() {\r\n  const [gamepads, setGamepads] = useState({});\r\n  useGamepads((gamepads) => {setGamepads(gamepads)});\r\n  \r\n  // useEffect(() => {\r\n  //   if(Object.keys(gamepads).length > 0){\r\n  //     console.log('X-AXIS: ', gamepads[0].axes[1])\r\n  //     console.log('Y-AXIS: ', gamepads[0].axes[2])\r\n  //     console.log(\r\n  //       dpadMap[gamepads[0].axes[6]],\r\n  //       buttonMap(gamepads[0].buttons)\r\n  //     );\r\n  //   }\r\n  // }, [gamepads[0] && gamepads[0].buttons])\r\n\r\n  if(gamepads[0]) {\r\n    console.log(\r\n      {\r\n        analog: {\r\n          x: gamepads[0].axes[1],\r\n          y: gamepads[0].axes[2]}\r\n      },\r\n      dpadMap[gamepads[0].axes[6]],\r\n      buttonMap(gamepads[0].buttons)\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div\r\n      className=\"Gamepads\"\r\n      style={{\r\n        position: \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n        width: '200px',\r\n        textAlign: 'left'\r\n      }}\r\n    >\r\n      {gamepads[0] && (<div><b>{gamepads[0].id}</b> <hr/></div>)}\r\n      {gamepads[0] && (\r\n        <ul style={{ listStyle: 'none', margin: 0, padding: 0}}>\r\n          <li>{gamepads[0].buttons[0].pressed ? 'Pressed CUP' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[1].pressed ? 'Pressed CRIGHT' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[2].pressed ? 'Pressed CDOWN' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[3].pressed ? 'Pressed CLEFT' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[4].pressed ? 'Pressed L' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[5].pressed ? 'Pressed R' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[6].pressed ? 'Pressed A' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[7].pressed ? 'Pressed Z' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[8].pressed ? 'Pressed B' : 'Press ____'}</li>\r\n          <li>{gamepads[0].buttons[9].pressed ? 'Pressed Start' : 'Press ____'}</li>\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}